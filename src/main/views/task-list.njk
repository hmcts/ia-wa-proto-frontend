{% extends "template.njk" %}

{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "macros/my-tasks.njk" import myTasks %}
{% from "macros/filter-by-location.njk" import filterByLocation %}
{% from "govuk/components/details/macro.njk" import govukDetails %}

{% block header %}

  {{ govukHeader({
    homepageUrl: "/",
    serviceName: "Manage cases",
    serviceUrl: "/",
    navigation: [
      {
        href: "/task-list",
        text: "Task list",
        active: true       
      },
      {
        href: "#",
        text: "Task manager"
      },
      {
        href: "/",
        text: "Case list"
      },
      {
        href: "#",
        text: "Create case"
      },
      {
        href: "/",
        text: "Sign Out",
        attributes: {
          "id": "sign-out-button"
          }
      }  
    ]
  }) }}

{% endblock %}


{% block content %}  

{{ govukRadios({
  classes: "govuk-radios--inline",
  idPrefix: "task-list-radio-button",
  name: "task-list",
  fieldset: {
    legend: {
      text: "Task List",
      isPageHeading: true,
      classes: "govuk-fieldset__legend--l"
    }
  },
  hint: {
    text: "Choose the tasks you'd like to view"
  },
  items: [
    {
      value: "myTasks",
      text: "My tasks",
      attributes: {
        "checked": "true"
      }
    },
    {
      value: "availableTasks",
      text: "Available tasks"
    }
  ]
}) }}

<div id="my-tasks-content" class="govuk-grid-row">
    <div class="govuk-grid-column-one-half">
      <h3 class="govuk-heading-m">My tasks</h3>
      {{ myTasks(tasks.myTasks, "myTasks") }}      
    </div>
    
</div>

<div id="available-tasks-content" style="display:none">
    <div class="govuk-grid-row">
      <div class="govuk-grid-column-one-half">
        <h3 class="govuk-heading-m">Available tasks</h3>
      </div>
    </div>
      
    <div class="govuk-grid-row">
      <div id="ex1" class="govuk-grid-column-two-half">
        {{ govukDetails({
          summaryText: "Filter by location",
          html: filterByLocation(tasks.addLocations, tasks.removeLocations),
          classes: "filter-by-location-details"
        }) }}    
      </div>
    </div>
    
    {{ myTasks(tasks.myAvailableTasks, "myAvailableTasks") }}         
    
</div>

{% endblock %}

{% block pageScripts %}
  {% include "includes/sortable-table-scripts.njk" %}
  {% include "includes/detail-actions-scripts.njk" %}
  {% include "includes/filter-by-location-scripts.njk" %}

  <script>
    new MOJFrontend.SortableTable({
      table: $('table')[0]
    });
    new MOJFrontend.SortableTable({
      table: $('table')[1]
    });
    
    document.getElementById('task-list-radio-button').onclick = (event) => {
      if (event.currentTarget.checked) {
        document.getElementById('my-tasks-content').style.display = 'block';
        document.getElementById('available-tasks-content').style.display = 'none';
      } 
    };
    
    document.getElementById('task-list-radio-button-2').onclick = (event) => {
      if (event.currentTarget.checked) {
        document.getElementById('my-tasks-content').style.display = 'none';
        document.getElementById('available-tasks-content').style.display = 'block';
      } 
    };

    document.getElementById("filter-done-button").onclick = () => {
      const listItems = document.querySelectorAll('#ss_unimp_list li');
      let query = "";
      for (let step = 0; step < listItems.length; step++) {
        query +="item" + step + '=' + listItems[step].innerText;
        if (step < listItems.length - 1) {
          query += "&";  
        }
       
      }
      location.href = "/filter?" + query;
    }

  </script>
{% endblock %}



