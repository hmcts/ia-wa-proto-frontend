{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/tag/macro.njk" import govukTag %}

{% macro formatTaskDueDate(caseRef, tasksType, index, taskDueDate, dateColourCode) %}
  {% if dateColourCode === 'today' %}    
    {{govukTag({
          text: taskDueDate,
          classes: "govuk-tag--orange"
      })
    }}
  {% endif %} 
  {% if dateColourCode === 'future' %}
    {{govukTag({
          text: taskDueDate,
          classes: "govuk-tag--green"
      })
    }}
  {% endif %} 
  {% if dateColourCode === 'past' %}
    {{govukTag({
          text: taskDueDate,
          classes: "govuk-tag--pink"
      })
    }}
  {% endif %} 
  
  {% if tasksType === 'myTasks' %}
    <div id="my-task-action-{{index}}" class="wa-action-task">
      <a href="/unclaim-task?caseRef={{caseRef}}">Release this task</a>
    </div>
  {% else %}
    <div id="my-available-task-{{index}}" class="wa-action-task">
      <a href="/claim-task?caseRef={{caseRef}}">Claim this task</a>
    </div>
  {% endif %}
{% endmacro %}


{% macro setDetails(caseRef, tasksType) %}
  <details class="govuk-details">
    <summary class="govuk-details__summary" tasks-type="{{tasksType}}">
      <span class="govuk-details__summary-text">Manage</span>
    </summary>
  </details>
{% endmacro %}

{# tasks: list of tasks either myTasks or myAvailableTasks. #}
{# tasksType: type of the tasks, either myTasks or myAvailableTasks. It's used to set the claim/unclaim component correctly. #}
{% macro myTasks(tasks, tasksType) %}

{% set dynamicRows = [] %}
{% for task in tasks %}
    
    {% set row = [
      {
        text: task.caseRef
      },
      {
        text: tasks[loop.index0].caseName,
        classes: "govuk-!-font-weight-bold" 
      },
      {
        text: tasks[loop.index0].caseCategory
      },
      {
        text: tasks[loop.index0].location
      },
      {
        text: tasks[loop.index0].taskName
      },
      {
        html: formatTaskDueDate(tasks[loop.index0].caseRef, tasksType, loop.index0, tasks[loop.index0].dueDate, tasks[loop.index0].dateColourCode),
        classes: "govuk-!-padding-bottom-0",
        attributes: {
          "data-sort-value": tasks[loop.index0].dateOrder
        }
      },
      {
        html: setDetails(tasks[loop.index0].caseRef, tasksType)
      }
    ] 
    %}

    {% set dynamicRows = (dynamicRows.push(row), dynamicRows) %}
{% endfor %}


{{ govukTable({
  head: [
    {
      text: "Case reference",
      attributes: {
        "aria-sort": "ascending"
      },
      classes: "my-task-header govuk-!-font-weight-regular"
    },
    {
      text: "Case name",
      classes: "my-task-header govuk-!-font-weight-regular",
      attributes: {
        "aria-sort": "ascending"
      }
    },
    {
      text: "Case category",
      classes: "my-task-header govuk-!-font-weight-regular",
       attributes: {
        "aria-sort": "ascending"
      }
    },
    {
      text: "Location",
      classes: "my-task-header govuk-!-font-weight-regular",
       attributes: {
        "aria-sort": "ascending"
      }
    },
    {
      text: "Task",
      classes: "my-task-header govuk-!-font-weight-regular",
       attributes: {
        "aria-sort": "ascending"
      }
    },
    {
      text: "Due",
      attributes: {
        "aria-sort": "ascending"
      },
      classes: "my-task-header"
    },
    {
      classes: "my-task-header"
    }
  ],
  rows: dynamicRows,
  classes: "my-tasks-table"
}) }}

    
{% endmacro %}
