{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/details/macro.njk" import govukDetails %}

{% macro formatTaskCaseRef(taskCaseRef) %}
  <a href="#" class="govuk-link">{{ taskCaseRef }}</a>
{% endmacro %}

{% macro formatTaskDueDate(taskDueDate, dateColourCode) %}
  {% if dateColourCode === 'today' %}
    <div class="task-date--today govuk-heading-s govuk-!-font-weight-regular">{{ taskDueDate }}</div>
  {% endif %} 
  {% if dateColourCode === 'future' %}
    <div class="task-date--future govuk-heading-s govuk-!-font-weight-regular">{{ taskDueDate }}</div>
  {% endif %} 
  {% if dateColourCode === 'past' %}
    <div class="task-date--past govuk-heading-s govuk-!-font-weight-regular">{{ taskDueDate }}</div>
  {% endif %} 
{% endmacro %}


{% macro setClaimTask(caseRef, tasksType) %}
  
  {% if tasksType == 'myTasks' %}
    <a href="/unclaim-task?caseRef={{caseRef}}">
      Unclaim this task
    </a>
  {% else %}
    <a href="/claim-task?caseRef={{caseRef}}">
      Claim this task
    </a>
  {% endif%}
      
{% endmacro %}

{% macro setDetails(caseRef, tasksType) %}
  {{ govukDetails({
    html: setClaimTask(caseRef, tasksType)
  }) }}
{% endmacro %}

{# tasks: is list of tasks either myTasks or myAvailableTasks. #}
{# tasksType: type of the tasks, either myTaks or myAvailableTasks. It's used to set the claim/unclaim component correctly. #}
{% macro myTasks(tasks, tasksType) %}

{% set dynamicRows = [] %}
{% for task in tasks %}
    
    {% set row = [
      {
        html: formatTaskCaseRef(tasks[loop.index0].caseRef)
      },
      {
        text: tasks[loop.index0].caseName,
        classes: "govuk-!-font-weight-bold" 
      },
      {
        text: tasks[loop.index0].caseCategory
      },
      {
        text: tasks[loop.index0].location
      },
      {
        text: tasks[loop.index0].taskName
      },
      {
        html: formatTaskDueDate(tasks[loop.index0].dueDate, tasks[loop.index0].dateColourCode),
        classes: "govuk-!-padding-bottom-0",
        attributes: {
          "data-sort-value": tasks[loop.index0].dateOrder
        }
      },
      {
        html: setDetails(tasks[loop.index0].caseRef, tasksType)
      }
    ] 
    %}

    {% set dynamicRows = (dynamicRows.push(row), dynamicRows) %}
{% endfor %}


{{ govukTable({
  head: [
    {
      text: "Case reference",
      attributes: {
        "aria-sort": "ascending"
      },
      classes: "my-task-header"
    },
    {
      text: "Case name",
      classes: "my-task-header",
      attributes: {
        "aria-sort": "ascending"
      }
    },
    {
      text: "Case category",
      classes: "my-task-header",
       attributes: {
        "aria-sort": "ascending"
      }
    },
    {
      text: "Location",
      classes: "my-task-header",
       attributes: {
        "aria-sort": "ascending"
      }
    },
    {
      text: "Task",
      classes: "my-task-header",
       attributes: {
        "aria-sort": "ascending"
      }
    },
    {
      text: "Date",
      attributes: {
        "aria-sort": "ascending"
      },
      classes: "my-task-header"
    },
    {
      classes: "my-task-header"
    }
  ],
  rows: dynamicRows
}) }}

    
{% endmacro %}
